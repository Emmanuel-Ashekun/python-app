name: docker push

on:
  push:
    paths:
      - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Set up cosign
        uses: sigstore/cosign-installer@main


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}



      - uses: actions/checkout@v3
      - name: Write public key to file
        run: echo "${{ secrets.COSIGN_PUBKEY }}" > cosign.pub

        
      - name: Set short SHA
        id: vars
        run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ashekun/python-app:${{ env.short_sha }}
  
      - name: sign container image
        run: |
          cosign sign --key env://COSIGN_KEY docker.io/ashekun/python-app:${{ env.short_sha }}
        shell: bash
        env: 
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}


      - name: check images
        run: |
          docker buildx imagetools inspect ashekun/python-app:${{ env.short_sha }}
          docker pull ashekun/python-app:${{ env.short_sha }}
          docker verify --key cosign.pub ashekun/python-app:${{ env.short_sha }}

    outputs:
      commit_id: ${{ env.short_sha }}


  
  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3


      - name: modify values file
        shell: bash
        run: |
          echo ${{ needs.ci.outputs.commit_id }} 
          pip install yq
          yq -Yi '.image.tag = "${{ needs.ci.outputs.commit_id }}"' charts/python-app/values.yaml

      - name: commit changes and push
        uses: Endbug/add-and-commit@v9
        with:
          message: 'updates values.yml with commit ${{ needs.ci.outputs.commit_id }}'
          

      - name: login argocd
        uses: clowdhaus/argo-cd-action/@main
        with:
          version:  2.6.7
          command: login
          options: --username ${{ vars.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure argo-argocd-server.argo 
              
      - name: sync argocd
        uses: clowdhaus/argo-cd-action/@main 
        with:
          version: 2.6.7
          command: app sync
          options: python-app
